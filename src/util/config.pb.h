// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#ifndef PROTOBUF_config_2eproto__INCLUDED
#define PROTOBUF_config_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_config_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsConfigImpl();
void InitDefaultsConfig();
inline void InitDefaults() {
  InitDefaultsConfig();
}
}  // namespace protobuf_config_2eproto
namespace lambda_sparse {
class Config;
class ConfigDefaultTypeInternal;
extern ConfigDefaultTypeInternal _Config_default_instance_;
}  // namespace lambda_sparse
namespace lambda_sparse {

// ===================================================================

class Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lambda_sparse.Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Config(Config&& from) noexcept
    : Config() {
    *this = ::std::move(from);
  }

  inline Config& operator=(Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Config* internal_default_instance() {
    return reinterpret_cast<const Config*>(
               &_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Config* other);
  friend void swap(Config& a, Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double learning_rate = 1;
  bool has_learning_rate() const;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  double learning_rate() const;
  void set_learning_rate(double value);

  // optional double alpha = 2;
  bool has_alpha() const;
  void clear_alpha();
  static const int kAlphaFieldNumber = 2;
  double alpha() const;
  void set_alpha(double value);

  // optional double beta = 3;
  bool has_beta() const;
  void clear_beta();
  static const int kBetaFieldNumber = 3;
  double beta() const;
  void set_beta(double value);

  // optional double l1 = 4;
  bool has_l1() const;
  void clear_l1();
  static const int kL1FieldNumber = 4;
  double l1() const;
  void set_l1(double value);

  // optional double l2 = 5;
  bool has_l2() const;
  void clear_l2();
  static const int kL2FieldNumber = 5;
  double l2() const;
  void set_l2(double value);

  // @@protoc_insertion_point(class_scope:lambda_sparse.Config)
 private:
  void set_has_learning_rate();
  void clear_has_learning_rate();
  void set_has_alpha();
  void clear_has_alpha();
  void set_has_beta();
  void clear_has_beta();
  void set_has_l1();
  void clear_has_l1();
  void set_has_l2();
  void clear_has_l2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double learning_rate_;
  double alpha_;
  double beta_;
  double l1_;
  double l2_;
  friend struct ::protobuf_config_2eproto::TableStruct;
  friend void ::protobuf_config_2eproto::InitDefaultsConfigImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Config

// optional double learning_rate = 1;
inline bool Config::has_learning_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Config::set_has_learning_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Config::clear_has_learning_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Config::clear_learning_rate() {
  learning_rate_ = 0;
  clear_has_learning_rate();
}
inline double Config::learning_rate() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.Config.learning_rate)
  return learning_rate_;
}
inline void Config::set_learning_rate(double value) {
  set_has_learning_rate();
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.Config.learning_rate)
}

// optional double alpha = 2;
inline bool Config::has_alpha() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Config::set_has_alpha() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Config::clear_has_alpha() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Config::clear_alpha() {
  alpha_ = 0;
  clear_has_alpha();
}
inline double Config::alpha() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.Config.alpha)
  return alpha_;
}
inline void Config::set_alpha(double value) {
  set_has_alpha();
  alpha_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.Config.alpha)
}

// optional double beta = 3;
inline bool Config::has_beta() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Config::set_has_beta() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Config::clear_has_beta() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Config::clear_beta() {
  beta_ = 0;
  clear_has_beta();
}
inline double Config::beta() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.Config.beta)
  return beta_;
}
inline void Config::set_beta(double value) {
  set_has_beta();
  beta_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.Config.beta)
}

// optional double l1 = 4;
inline bool Config::has_l1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Config::set_has_l1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Config::clear_has_l1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Config::clear_l1() {
  l1_ = 0;
  clear_has_l1();
}
inline double Config::l1() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.Config.l1)
  return l1_;
}
inline void Config::set_l1(double value) {
  set_has_l1();
  l1_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.Config.l1)
}

// optional double l2 = 5;
inline bool Config::has_l2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Config::set_has_l2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Config::clear_has_l2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Config::clear_l2() {
  l2_ = 0;
  clear_has_l2();
}
inline double Config::l2() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.Config.l2)
  return l2_;
}
inline void Config::set_l2(double value) {
  set_has_l2();
  l2_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.Config.l2)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace lambda_sparse

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2eproto__INCLUDED
