// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#ifndef PROTOBUF_model_2eproto__INCLUDED
#define PROTOBUF_model_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_model_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsFeatWgtImpl();
void InitDefaultsFeatWgt();
void InitDefaultsModelParametersImpl();
void InitDefaultsModelParameters();
inline void InitDefaults() {
  InitDefaultsFeatWgt();
  InitDefaultsModelParameters();
}
}  // namespace protobuf_model_2eproto
namespace lambda_sparse {
class FeatWgt;
class FeatWgtDefaultTypeInternal;
extern FeatWgtDefaultTypeInternal _FeatWgt_default_instance_;
class ModelParameters;
class ModelParametersDefaultTypeInternal;
extern ModelParametersDefaultTypeInternal _ModelParameters_default_instance_;
}  // namespace lambda_sparse
namespace lambda_sparse {

// ===================================================================

class FeatWgt : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:lambda_sparse.FeatWgt) */ {
 public:
  FeatWgt();
  virtual ~FeatWgt();

  FeatWgt(const FeatWgt& from);

  inline FeatWgt& operator=(const FeatWgt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FeatWgt(FeatWgt&& from) noexcept
    : FeatWgt() {
    *this = ::std::move(from);
  }

  inline FeatWgt& operator=(FeatWgt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const FeatWgt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FeatWgt* internal_default_instance() {
    return reinterpret_cast<const FeatWgt*>(
               &_FeatWgt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FeatWgt* other);
  friend void swap(FeatWgt& a, FeatWgt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FeatWgt* New() const PROTOBUF_FINAL { return New(NULL); }

  FeatWgt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const FeatWgt& from);
  void MergeFrom(const FeatWgt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FeatWgt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 feat_id = 1;
  bool has_feat_id() const;
  void clear_feat_id();
  static const int kFeatIdFieldNumber = 1;
  ::google::protobuf::uint64 feat_id() const;
  void set_feat_id(::google::protobuf::uint64 value);

  // optional float wi = 2;
  bool has_wi() const;
  void clear_wi();
  static const int kWiFieldNumber = 2;
  float wi() const;
  void set_wi(float value);

  // optional float ni = 3;
  bool has_ni() const;
  void clear_ni();
  static const int kNiFieldNumber = 3;
  float ni() const;
  void set_ni(float value);

  // optional float zi = 4;
  bool has_zi() const;
  void clear_zi();
  static const int kZiFieldNumber = 4;
  float zi() const;
  void set_zi(float value);

  // optional float gt = 5;
  bool has_gt() const;
  void clear_gt();
  static const int kGtFieldNumber = 5;
  float gt() const;
  void set_gt(float value);

  // @@protoc_insertion_point(class_scope:lambda_sparse.FeatWgt)
 private:
  void set_has_feat_id();
  void clear_has_feat_id();
  void set_has_wi();
  void clear_has_wi();
  void set_has_ni();
  void clear_has_ni();
  void set_has_zi();
  void clear_has_zi();
  void set_has_gt();
  void clear_has_gt();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 feat_id_;
  float wi_;
  float ni_;
  float zi_;
  float gt_;
  friend struct ::protobuf_model_2eproto::TableStruct;
  friend void ::protobuf_model_2eproto::InitDefaultsFeatWgtImpl();
};
// -------------------------------------------------------------------

class ModelParameters : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:lambda_sparse.ModelParameters) */ {
 public:
  ModelParameters();
  virtual ~ModelParameters();

  ModelParameters(const ModelParameters& from);

  inline ModelParameters& operator=(const ModelParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModelParameters(ModelParameters&& from) noexcept
    : ModelParameters() {
    *this = ::std::move(from);
  }

  inline ModelParameters& operator=(ModelParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ModelParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelParameters* internal_default_instance() {
    return reinterpret_cast<const ModelParameters*>(
               &_ModelParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ModelParameters* other);
  friend void swap(ModelParameters& a, ModelParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModelParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  ModelParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ModelParameters& from);
  void MergeFrom(const ModelParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .lambda_sparse.FeatWgt w = 2;
  int w_size() const;
  void clear_w();
  static const int kWFieldNumber = 2;
  const ::lambda_sparse::FeatWgt& w(int index) const;
  ::lambda_sparse::FeatWgt* mutable_w(int index);
  ::lambda_sparse::FeatWgt* add_w();
  ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >*
      mutable_w();
  const ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >&
      w() const;

  // repeated .lambda_sparse.FeatWgt v = 3;
  int v_size() const;
  void clear_v();
  static const int kVFieldNumber = 3;
  const ::lambda_sparse::FeatWgt& v(int index) const;
  ::lambda_sparse::FeatWgt* mutable_v(int index);
  ::lambda_sparse::FeatWgt* add_v();
  ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >*
      mutable_v();
  const ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >&
      v() const;

  // optional .lambda_sparse.FeatWgt bias = 1;
  bool has_bias() const;
  void clear_bias();
  static const int kBiasFieldNumber = 1;
  const ::lambda_sparse::FeatWgt& bias() const;
  ::lambda_sparse::FeatWgt* release_bias();
  ::lambda_sparse::FeatWgt* mutable_bias();
  void set_allocated_bias(::lambda_sparse::FeatWgt* bias);

  // @@protoc_insertion_point(class_scope:lambda_sparse.ModelParameters)
 private:
  void set_has_bias();
  void clear_has_bias();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt > w_;
  ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt > v_;
  ::lambda_sparse::FeatWgt* bias_;
  friend struct ::protobuf_model_2eproto::TableStruct;
  friend void ::protobuf_model_2eproto::InitDefaultsModelParametersImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FeatWgt

// optional uint64 feat_id = 1;
inline bool FeatWgt::has_feat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FeatWgt::set_has_feat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FeatWgt::clear_has_feat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FeatWgt::clear_feat_id() {
  feat_id_ = GOOGLE_ULONGLONG(0);
  clear_has_feat_id();
}
inline ::google::protobuf::uint64 FeatWgt::feat_id() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.FeatWgt.feat_id)
  return feat_id_;
}
inline void FeatWgt::set_feat_id(::google::protobuf::uint64 value) {
  set_has_feat_id();
  feat_id_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.FeatWgt.feat_id)
}

// optional float wi = 2;
inline bool FeatWgt::has_wi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FeatWgt::set_has_wi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FeatWgt::clear_has_wi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FeatWgt::clear_wi() {
  wi_ = 0;
  clear_has_wi();
}
inline float FeatWgt::wi() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.FeatWgt.wi)
  return wi_;
}
inline void FeatWgt::set_wi(float value) {
  set_has_wi();
  wi_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.FeatWgt.wi)
}

// optional float ni = 3;
inline bool FeatWgt::has_ni() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FeatWgt::set_has_ni() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FeatWgt::clear_has_ni() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FeatWgt::clear_ni() {
  ni_ = 0;
  clear_has_ni();
}
inline float FeatWgt::ni() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.FeatWgt.ni)
  return ni_;
}
inline void FeatWgt::set_ni(float value) {
  set_has_ni();
  ni_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.FeatWgt.ni)
}

// optional float zi = 4;
inline bool FeatWgt::has_zi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FeatWgt::set_has_zi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FeatWgt::clear_has_zi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FeatWgt::clear_zi() {
  zi_ = 0;
  clear_has_zi();
}
inline float FeatWgt::zi() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.FeatWgt.zi)
  return zi_;
}
inline void FeatWgt::set_zi(float value) {
  set_has_zi();
  zi_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.FeatWgt.zi)
}

// optional float gt = 5;
inline bool FeatWgt::has_gt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FeatWgt::set_has_gt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FeatWgt::clear_has_gt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FeatWgt::clear_gt() {
  gt_ = 0;
  clear_has_gt();
}
inline float FeatWgt::gt() const {
  // @@protoc_insertion_point(field_get:lambda_sparse.FeatWgt.gt)
  return gt_;
}
inline void FeatWgt::set_gt(float value) {
  set_has_gt();
  gt_ = value;
  // @@protoc_insertion_point(field_set:lambda_sparse.FeatWgt.gt)
}

// -------------------------------------------------------------------

// ModelParameters

// optional .lambda_sparse.FeatWgt bias = 1;
inline bool ModelParameters::has_bias() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModelParameters::set_has_bias() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModelParameters::clear_has_bias() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModelParameters::clear_bias() {
  if (bias_ != NULL) bias_->Clear();
  clear_has_bias();
}
inline const ::lambda_sparse::FeatWgt& ModelParameters::bias() const {
  const ::lambda_sparse::FeatWgt* p = bias_;
  // @@protoc_insertion_point(field_get:lambda_sparse.ModelParameters.bias)
  return p != NULL ? *p : *reinterpret_cast<const ::lambda_sparse::FeatWgt*>(
      &::lambda_sparse::_FeatWgt_default_instance_);
}
inline ::lambda_sparse::FeatWgt* ModelParameters::release_bias() {
  // @@protoc_insertion_point(field_release:lambda_sparse.ModelParameters.bias)
  clear_has_bias();
  ::lambda_sparse::FeatWgt* temp = bias_;
  bias_ = NULL;
  return temp;
}
inline ::lambda_sparse::FeatWgt* ModelParameters::mutable_bias() {
  set_has_bias();
  if (bias_ == NULL) {
    bias_ = new ::lambda_sparse::FeatWgt;
  }
  // @@protoc_insertion_point(field_mutable:lambda_sparse.ModelParameters.bias)
  return bias_;
}
inline void ModelParameters::set_allocated_bias(::lambda_sparse::FeatWgt* bias) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bias_;
  }
  if (bias) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bias = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bias, submessage_arena);
    }
    set_has_bias();
  } else {
    clear_has_bias();
  }
  bias_ = bias;
  // @@protoc_insertion_point(field_set_allocated:lambda_sparse.ModelParameters.bias)
}

// repeated .lambda_sparse.FeatWgt w = 2;
inline int ModelParameters::w_size() const {
  return w_.size();
}
inline void ModelParameters::clear_w() {
  w_.Clear();
}
inline const ::lambda_sparse::FeatWgt& ModelParameters::w(int index) const {
  // @@protoc_insertion_point(field_get:lambda_sparse.ModelParameters.w)
  return w_.Get(index);
}
inline ::lambda_sparse::FeatWgt* ModelParameters::mutable_w(int index) {
  // @@protoc_insertion_point(field_mutable:lambda_sparse.ModelParameters.w)
  return w_.Mutable(index);
}
inline ::lambda_sparse::FeatWgt* ModelParameters::add_w() {
  // @@protoc_insertion_point(field_add:lambda_sparse.ModelParameters.w)
  return w_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >*
ModelParameters::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:lambda_sparse.ModelParameters.w)
  return &w_;
}
inline const ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >&
ModelParameters::w() const {
  // @@protoc_insertion_point(field_list:lambda_sparse.ModelParameters.w)
  return w_;
}

// repeated .lambda_sparse.FeatWgt v = 3;
inline int ModelParameters::v_size() const {
  return v_.size();
}
inline void ModelParameters::clear_v() {
  v_.Clear();
}
inline const ::lambda_sparse::FeatWgt& ModelParameters::v(int index) const {
  // @@protoc_insertion_point(field_get:lambda_sparse.ModelParameters.v)
  return v_.Get(index);
}
inline ::lambda_sparse::FeatWgt* ModelParameters::mutable_v(int index) {
  // @@protoc_insertion_point(field_mutable:lambda_sparse.ModelParameters.v)
  return v_.Mutable(index);
}
inline ::lambda_sparse::FeatWgt* ModelParameters::add_v() {
  // @@protoc_insertion_point(field_add:lambda_sparse.ModelParameters.v)
  return v_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >*
ModelParameters::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:lambda_sparse.ModelParameters.v)
  return &v_;
}
inline const ::google::protobuf::RepeatedPtrField< ::lambda_sparse::FeatWgt >&
ModelParameters::v() const {
  // @@protoc_insertion_point(field_list:lambda_sparse.ModelParameters.v)
  return v_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lambda_sparse

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_2eproto__INCLUDED
