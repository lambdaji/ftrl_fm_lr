// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xysample.proto

#include "xysample.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace lambda_sparse {
class FeatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Feature>
      _instance;
} _Feature_default_instance_;
class xySampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<xySample>
      _instance;
} _xySample_default_instance_;
class xySamplesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<xySamples>
      _instance;
} _xySamples_default_instance_;
}  // namespace lambda_sparse
namespace protobuf_xysample_2eproto {
void InitDefaultsFeatureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::lambda_sparse::_Feature_default_instance_;
    new (ptr) ::lambda_sparse::Feature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lambda_sparse::Feature::InitAsDefaultInstance();
}

void InitDefaultsFeature() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFeatureImpl);
}

void InitDefaultsxySampleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_xysample_2eproto::InitDefaultsFeature();
  {
    void* ptr = &::lambda_sparse::_xySample_default_instance_;
    new (ptr) ::lambda_sparse::xySample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lambda_sparse::xySample::InitAsDefaultInstance();
}

void InitDefaultsxySample() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsxySampleImpl);
}

void InitDefaultsxySamplesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_xysample_2eproto::InitDefaultsxySample();
  {
    void* ptr = &::lambda_sparse::_xySamples_default_instance_;
    new (ptr) ::lambda_sparse::xySamples();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::lambda_sparse::xySamples::InitAsDefaultInstance();
}

void InitDefaultsxySamples() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsxySamplesImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::Feature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::Feature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::Feature, filed_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::Feature, feat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::Feature, feat_val_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySample, features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySample, y_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySamples, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySamples, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::lambda_sparse::xySamples, samples_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::lambda_sparse::Feature)},
  { 11, 18, sizeof(::lambda_sparse::xySample)},
  { 20, 26, sizeof(::lambda_sparse::xySamples)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::lambda_sparse::_Feature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lambda_sparse::_xySample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::lambda_sparse::_xySamples_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "xysample.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016xysample.proto\022\rlambda_sparse\">\n\007Featu"
      "re\022\020\n\010filed_id\030\001 \001(\003\022\017\n\007feat_id\030\002 \001(\003\022\020\n"
      "\010feat_val\030\003 \001(\002\"\?\n\010xySample\022(\n\010features\030"
      "\001 \003(\0132\026.lambda_sparse.Feature\022\t\n\001y\030\002 \001(\001"
      "\"5\n\txySamples\022(\n\007samples\030\001 \003(\0132\027.lambda_"
      "sparse.xySample"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 215);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "xysample.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_xysample_2eproto
namespace lambda_sparse {

// ===================================================================

void Feature::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Feature::kFiledIdFieldNumber;
const int Feature::kFeatIdFieldNumber;
const int Feature::kFeatValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Feature::Feature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_xysample_2eproto::InitDefaultsFeature();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lambda_sparse.Feature)
}
Feature::Feature(const Feature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&filed_id_, &from.filed_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&feat_val_) -
    reinterpret_cast<char*>(&filed_id_)) + sizeof(feat_val_));
  // @@protoc_insertion_point(copy_constructor:lambda_sparse.Feature)
}

void Feature::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&filed_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feat_val_) -
      reinterpret_cast<char*>(&filed_id_)) + sizeof(feat_val_));
}

Feature::~Feature() {
  // @@protoc_insertion_point(destructor:lambda_sparse.Feature)
  SharedDtor();
}

void Feature::SharedDtor() {
}

void Feature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Feature::descriptor() {
  ::protobuf_xysample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xysample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Feature& Feature::default_instance() {
  ::protobuf_xysample_2eproto::InitDefaultsFeature();
  return *internal_default_instance();
}

Feature* Feature::New(::google::protobuf::Arena* arena) const {
  Feature* n = new Feature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Feature::Clear() {
// @@protoc_insertion_point(message_clear_start:lambda_sparse.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&filed_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&feat_val_) -
        reinterpret_cast<char*>(&filed_id_)) + sizeof(feat_val_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Feature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lambda_sparse.Feature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 filed_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_filed_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &filed_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 feat_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_feat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &feat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float feat_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_feat_val();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &feat_val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lambda_sparse.Feature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lambda_sparse.Feature)
  return false;
#undef DO_
}

void Feature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lambda_sparse.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 filed_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->filed_id(), output);
  }

  // optional int64 feat_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->feat_id(), output);
  }

  // optional float feat_val = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->feat_val(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lambda_sparse.Feature)
}

::google::protobuf::uint8* Feature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lambda_sparse.Feature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 filed_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->filed_id(), target);
  }

  // optional int64 feat_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->feat_id(), target);
  }

  // optional float feat_val = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->feat_val(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lambda_sparse.Feature)
  return target;
}

size_t Feature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lambda_sparse.Feature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int64 filed_id = 1;
    if (has_filed_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->filed_id());
    }

    // optional int64 feat_id = 2;
    if (has_feat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->feat_id());
    }

    // optional float feat_val = 3;
    if (has_feat_val()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Feature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lambda_sparse.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  const Feature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Feature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lambda_sparse.Feature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lambda_sparse.Feature)
    MergeFrom(*source);
  }
}

void Feature::MergeFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lambda_sparse.Feature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      filed_id_ = from.filed_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      feat_id_ = from.feat_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      feat_val_ = from.feat_val_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Feature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lambda_sparse.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Feature::CopyFrom(const Feature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lambda_sparse.Feature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Feature::IsInitialized() const {
  return true;
}

void Feature::Swap(Feature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Feature::InternalSwap(Feature* other) {
  using std::swap;
  swap(filed_id_, other->filed_id_);
  swap(feat_id_, other->feat_id_);
  swap(feat_val_, other->feat_val_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Feature::GetMetadata() const {
  protobuf_xysample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xysample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void xySample::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int xySample::kFeaturesFieldNumber;
const int xySample::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

xySample::xySample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_xysample_2eproto::InitDefaultsxySample();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lambda_sparse.xySample)
}
xySample::xySample(const xySample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      features_(from.features_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  y_ = from.y_;
  // @@protoc_insertion_point(copy_constructor:lambda_sparse.xySample)
}

void xySample::SharedCtor() {
  _cached_size_ = 0;
  y_ = 0;
}

xySample::~xySample() {
  // @@protoc_insertion_point(destructor:lambda_sparse.xySample)
  SharedDtor();
}

void xySample::SharedDtor() {
}

void xySample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* xySample::descriptor() {
  ::protobuf_xysample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xysample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const xySample& xySample::default_instance() {
  ::protobuf_xysample_2eproto::InitDefaultsxySample();
  return *internal_default_instance();
}

xySample* xySample::New(::google::protobuf::Arena* arena) const {
  xySample* n = new xySample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void xySample::Clear() {
// @@protoc_insertion_point(message_clear_start:lambda_sparse.xySample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  y_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool xySample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lambda_sparse.xySample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lambda_sparse.Feature features = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_features()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lambda_sparse.xySample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lambda_sparse.xySample)
  return false;
#undef DO_
}

void xySample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lambda_sparse.xySample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lambda_sparse.Feature features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->features(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double y = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lambda_sparse.xySample)
}

::google::protobuf::uint8* xySample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lambda_sparse.xySample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lambda_sparse.Feature features = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->features_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->features(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional double y = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lambda_sparse.xySample)
  return target;
}

size_t xySample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lambda_sparse.xySample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .lambda_sparse.Feature features = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->features_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->features(static_cast<int>(i)));
    }
  }

  // optional double y = 2;
  if (has_y()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void xySample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lambda_sparse.xySample)
  GOOGLE_DCHECK_NE(&from, this);
  const xySample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const xySample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lambda_sparse.xySample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lambda_sparse.xySample)
    MergeFrom(*source);
  }
}

void xySample::MergeFrom(const xySample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lambda_sparse.xySample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from.has_y()) {
    set_y(from.y());
  }
}

void xySample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lambda_sparse.xySample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xySample::CopyFrom(const xySample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lambda_sparse.xySample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xySample::IsInitialized() const {
  return true;
}

void xySample::Swap(xySample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void xySample::InternalSwap(xySample* other) {
  using std::swap;
  features_.InternalSwap(&other->features_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata xySample::GetMetadata() const {
  protobuf_xysample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xysample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void xySamples::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int xySamples::kSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

xySamples::xySamples()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_xysample_2eproto::InitDefaultsxySamples();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lambda_sparse.xySamples)
}
xySamples::xySamples(const xySamples& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      samples_(from.samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:lambda_sparse.xySamples)
}

void xySamples::SharedCtor() {
  _cached_size_ = 0;
}

xySamples::~xySamples() {
  // @@protoc_insertion_point(destructor:lambda_sparse.xySamples)
  SharedDtor();
}

void xySamples::SharedDtor() {
}

void xySamples::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* xySamples::descriptor() {
  ::protobuf_xysample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xysample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const xySamples& xySamples::default_instance() {
  ::protobuf_xysample_2eproto::InitDefaultsxySamples();
  return *internal_default_instance();
}

xySamples* xySamples::New(::google::protobuf::Arena* arena) const {
  xySamples* n = new xySamples;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void xySamples::Clear() {
// @@protoc_insertion_point(message_clear_start:lambda_sparse.xySamples)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  samples_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool xySamples::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lambda_sparse.xySamples)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .lambda_sparse.xySample samples = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lambda_sparse.xySamples)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lambda_sparse.xySamples)
  return false;
#undef DO_
}

void xySamples::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lambda_sparse.xySamples)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lambda_sparse.xySample samples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->samples_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->samples(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:lambda_sparse.xySamples)
}

::google::protobuf::uint8* xySamples::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lambda_sparse.xySamples)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lambda_sparse.xySample samples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->samples_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->samples(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lambda_sparse.xySamples)
  return target;
}

size_t xySamples::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lambda_sparse.xySamples)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .lambda_sparse.xySample samples = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->samples_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->samples(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void xySamples::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lambda_sparse.xySamples)
  GOOGLE_DCHECK_NE(&from, this);
  const xySamples* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const xySamples>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lambda_sparse.xySamples)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lambda_sparse.xySamples)
    MergeFrom(*source);
  }
}

void xySamples::MergeFrom(const xySamples& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lambda_sparse.xySamples)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  samples_.MergeFrom(from.samples_);
}

void xySamples::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lambda_sparse.xySamples)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xySamples::CopyFrom(const xySamples& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lambda_sparse.xySamples)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xySamples::IsInitialized() const {
  return true;
}

void xySamples::Swap(xySamples* other) {
  if (other == this) return;
  InternalSwap(other);
}
void xySamples::InternalSwap(xySamples* other) {
  using std::swap;
  samples_.InternalSwap(&other->samples_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata xySamples::GetMetadata() const {
  protobuf_xysample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_xysample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lambda_sparse

// @@protoc_insertion_point(global_scope)
